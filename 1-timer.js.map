{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst datePicker = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\nlet timerId;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0]; // зберігаємо дату одразу\n      \n        if (userSelectedDate <= new Date()) {\n          iziToast.error({\n            title: 'Error',\n            message: 'Please choose a date in the future',\n          });\n          startBtn.disabled = true;\n          return;\n        }\n        startBtn.disabled = false;\n      }\n};\n\nflatpickr(datePicker, options);\n\nstartBtn.addEventListener('click', () => {\n    if (!userSelectedDate) return;\n  \n    startBtn.disabled = true;\n    datePicker.disabled = true;\n  \n    timerId = setInterval(() => {\n      const now = new Date();\n      const ms = userSelectedDate - now;\n  \n      if (ms <= 0) {\n        clearInterval(timerId);\n        updateTimerDisplay(0);\n        datePicker.disabled = false;\n        return;\n      }\n  \n      updateTimerDisplay(ms);\n    }, 1000);\n  });\n  \n  function updateTimerDisplay(ms) {\n    const { days, hours, minutes, seconds } = convertMs(ms);\n    daysEl.textContent = addLeadingZero(days);\n    hoursEl.textContent = addLeadingZero(hours);\n    minutesEl.textContent = addLeadingZero(minutes);\n    secondsEl.textContent = addLeadingZero(seconds);\n  }\n  \n  function convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n  \n  function addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n  }\n  "],"names":["datePicker","startBtn","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","timerId","options","selectedDates","iziToast","flatpickr","ms","updateTimerDisplay","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"+IAKA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EACAC,EAEJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAGnB,GAFAH,EAAmBG,EAAc,CAAC,EAE9BH,GAAoB,IAAI,KAAQ,CAClCI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACrB,CAAW,EACDT,EAAS,SAAW,GACpB,MACD,CACDA,EAAS,SAAW,EACrB,CACP,EAEAU,EAAUX,EAAYQ,CAAO,EAE7BP,EAAS,iBAAiB,QAAS,IAAM,CAChCK,IAELL,EAAS,SAAW,GACpBD,EAAW,SAAW,GAEtBO,EAAU,YAAY,IAAM,CAE1B,MAAMK,EAAKN,EADC,IAAI,KAGhB,GAAIM,GAAM,EAAG,CACX,cAAcL,CAAO,EACrBM,EAAmB,CAAC,EACpBb,EAAW,SAAW,GACtB,MACD,CAEDa,EAAmBD,CAAE,CACtB,EAAE,GAAI,EACX,CAAG,EAED,SAASC,EAAmBD,EAAI,CAC9B,KAAM,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAE,EACtDV,EAAO,YAAciB,EAAeL,CAAI,EACxCX,EAAQ,YAAcgB,EAAeJ,CAAK,EAC1CX,EAAU,YAAce,EAAeH,CAAO,EAC9CX,EAAU,YAAcc,EAAeF,CAAO,CAC/C,CAED,SAASC,EAAUN,EAAI,CAMrB,MAAME,EAAO,KAAK,MAAMF,EAAK,KAAG,EAC1BG,EAAQ,KAAK,MAAOH,EAAK,MAAO,IAAI,EACpCI,EAAU,KAAK,MAAQJ,EAAK,MAAO,KAAQ,GAAM,EACjDK,EAAU,KAAK,MAASL,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAED,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC"}